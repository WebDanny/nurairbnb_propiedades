plugins {
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'application'
	id 'com.diffplug.spotless' version '5.0.0'
	id 'jacoco'
}

group 'com.danny.checkinapi'
version '1.0'
sourceCompatibility = '17'
//archivesBaseName  = 'check-in-api'

repositories {
	mavenCentral()
}

mainClassName = 'com.danny.checkinapi.CheckInApiApplication'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.13.4'
	//implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.postgresql:postgresql:42.4.2'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'


	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	//runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	testImplementation 'org.mockito:mockito-all:1.10.19'
	implementation 'org.jacoco:org.jacoco.core:0.8.7'

}

//configurations {
//	all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j2-impl'
//	all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
//}
test {
	useJUnitPlatform()
}

apply from: file("$rootProject.projectDir/gradle/heroku/stage.gradle")

spotless {
	java {
		googleJavaFormat()
		// Add other formatting rules if needed
	}
}

task copyJarToBin {
	copy {
		from '../build/libs/CheckInApi-1.0.jar'
		into "/build/libs/"
	}
}

/*shadowJar {
	baseName = 'CheckInApi'
	classifier = null
	version = null
	manifest {
		attributes(
				'Main-Class': 'com.danny.checkinapi.CheckInApiApplication'
		)
	}
}*/

//task copyLog4j2Config(type: Copy) {
//	from 'src/main/resources'
//	include 'log4j2-spring.xml'
//	into "$buildDir/resources/main"
//}
//
//bootJar {
//	dependsOn(copyLog4j2Config)
//}